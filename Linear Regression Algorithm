
from matplotlib import pyplot as plt
import numpy as np
import pandas as pd
from statistics import mean


x=np.array([1,2,3,4,5,6],np.float64)
y=np.array([5,3,4,6,5,7],np.float64)


def best_fit_line(x,y):
    m=(((x.mean())*(y.mean()))-((x*y).mean()))/(((x.mean())*(x.mean()))-(x*x).mean())
    c=(y.mean())-m*(x.mean())
    return m,c
    
def cost(m,c,x,y):
    cost=0
    for i in range(len(x)):
        cost+=0.5*((regression[i]-y[i])**2)
    return cost

m,c=best_fit_line(x,y)
regression=[]
for i in range(len(x)):
    regression.append((m*x[i])+c)
    
plt.scatter(x,y)
plt.plot(x,regression)
plt.show()
    

def cost(m,c,x,y):
    cost=0
    for i in range(len(x)):
        cost+=0.5*((regression[i]-y[i])**2)
    return cost

def predict(x):
    return m*x+c
predict(8)
